"""
Django settings for pa_arriba_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # ¡ASEGÚRATE DE QUE ESTA LÍNEA ESTÉ AQUÍ! Es necesaria para os.path.join

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b5rp4(515x-@2el5=6_&7*7b#2yw1(=ju_9olo02m(4_lzssuq'

# SECURITY WARNING: don't run with debug turned on in production!
# MODIFICADO: Leer DEBUG desde una variable de entorno. Por defecto True para desarrollo local.
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'

# MODIFICADO: Configuración de ALLOWED_HOSTS para Render y desarrollo local
ALLOWED_HOSTS = []

# Obtener los hosts permitidos de una variable de entorno (para Render u otros despliegues)
# Si la variable DJANGO_ALLOWED_HOSTS existe, la usa (separados por coma)
# Esto es más robusto que depender de RENDER_EXTERNAL_HOSTNAME directamente para ALLOWED_HOSTS
allowed_hosts_str = os.environ.get('DJANGO_ALLOWED_HOSTS')
if allowed_hosts_str:
    ALLOWED_HOSTS.extend(allowed_hosts_str.split(','))

# Si estamos en desarrollo local (DEBUG es True), asegura que localhost y 127.0.0.1 estén permitidos
if DEBUG:
    if 'localhost' not in ALLOWED_HOSTS:
        ALLOWED_HOSTS.append('localhost')
    if '127.0.0.1' not in ALLOWED_HOSTS:
        ALLOWED_HOSTS.append('127.0.0.1')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # Asegúrate de que esta línea esté presente
    'core', # Asegúrate de que tu app 'core' esté listada aquí
    'store'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pa_arriba_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pa_arriba_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/' # Añadido el '/' al final para consistencia en Django

# Directorios donde Django buscará archivos estáticos adicionales durante el desarrollo
STATICFILES_DIRS = [
    BASE_DIR / 'pa_arriba_project' / 'static', # Ejemplo: si tienes estáticos globales aquí
    BASE_DIR / 'core' / 'static', # Aseguramos que los estáticos de la app 'core' sean encontrados
]

# La ruta donde collectstatic reunirá todos los archivos estáticos para producción
STATIC_ROOT = BASE_DIR / 'staticfiles'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración para archivos multimedia (imágenes, videos, etc. subidos por usuarios)
# MEDIA_ROOT es la ruta absoluta en el sistema de archivos donde se guardarán los archivos subidos.
# os.path.join(BASE_DIR, 'media') crea una carpeta 'media' en la raíz de tu proyecto.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = BASE_DIR / 'media' # Se crea una carpeta 'media' en la raíz del proyecto

# MEDIA_URL es la URL pública que se usará para acceder a los archivos multimedia.
# Por ejemplo, si subes una imagen 'producto.jpg', se accederá a ella a través de '/media/producto.jpg'
MEDIA_URL = '/media/'
